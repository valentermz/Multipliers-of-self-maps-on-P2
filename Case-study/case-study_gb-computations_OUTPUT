-- -*-mode: M2-*-

-- This is the output of the program 'compute-h.m2' where we have provided as input the following values for t,d (corresponding to our case study):
-- t_0 = -4
-- t_1 = -3/5
-- t_2 = 4/3
-- t_3 = 9
-- d_0 = 3
-- d_1 = -4/25
-- d_2 = 1/3
-- d_3 = -60

+ M2 --no-readline --print-width 97
Macaulay2, version 1.9.2
with packages: ConwayPolynomials, Elimination, IntegralClosure, LLLBases, PrimaryDecomposition,
               ReesAlgebra, TangentCone

i1 : -- A case study : GrÃ¶bner basis for the Jacobi ideal and the polynomials h 
     --------------------------------------------------------------------------
     gbTrace = 3; 

i2 : printWidth = 0;

i3 : kk = QQ;

i4 : R = kk[w_0..w_2, x,y, c_0..c_5,a,b, p,q,r,s,L, MonomialOrder => {3, 10, 5}];

   -- registering polynomial ring 0 at 0xb517990

   -- registering polynomial ring 1 at 0xb5177f8

   -- registering polynomial ring 2 at 0xb5175d8

i5 : -- These is the spectra of our case study:
     ------------------------------------------
     t_0 = -4

o5 = -4

i6 : t_1 = -3/5

       3
o6 = - -
       5

o6 : QQ

i7 : t_2 = 4/3

     4
o7 = -
     3

o7 : QQ

i8 : t_3 = 9

o8 = 9

i9 : d_0 = 3

o9 = 3

i10 : d_1 = -4/25

         4
o10 = - --
        25

o10 : QQ

i11 : d_2 = 1/3

      1
o11 = -
      3

o11 : QQ

i12 : d_3 = -60

o12 = -60

i13 : -- Below are all the equations relating the above numbers to the variables a,b,c_k:
      -----------------------------------------------------------------------------------
      -- Relations coming from Jacobi formula:
      Rel_0 = a^2*d_3*x^2 + 2*a*b*d_3*x*y + b^2*d_3*y^2 + a^2*d_1*x + 2*a*d_1*x + 2*a*d_3*x + 2*b*d_3*y + d_1*x + d_3;

i14 : Rel_1 = a^2*d_3*x^2 + 2*a*b*d_3*x*y + b^2*d_3*y^2 + b^2*d_2*y + 2*a*d_3*x + 2*b*d_2*y + 2*b*d_3*y + d_2*y + d_3;

i15 : Rel_2 = a^2*b*d_1*d_2*d_3*x + a*b^2*d_1*d_2*d_3*y + a^2*d_0*d_1*d_3*x + a*b*d_0*d_2*d_3*x + a^2*d_1*d_2*d_3*x + a*b*d_1*d_2*d_3*x + a*b*d_0*d_1*d_3*y + b^2*d_0*d_2*d_3*y + a*b*d_1*d_2*d_3*y + b^2*d_1*d_2*d_3*y + a*b*d_0*d_1*d_2 + a*b*d_1*d_2*d_3 + a*d_0*d_1*d_3*x + a*d_0*d_2*d_3*x + a*d_1*d_2*d_3*x + b*d_0*d_1*d_3*y + b*d_0*d_2*d_3*y + b*d_1*d_2*d_3*y + a*d_0*d_1*d_2 + b*d_0*d_1*d_2 + a*d_0*d_1*d_3 + b*d_0*d_2*d_3 + a*d_1*d_2*d_3 + b*d_1*d_2*d_3 + d_0*d_1*d_2 + d_0*d_1*d_3 + d_0*d_2*d_3 + d_1*d_2*d_3;

i16 : Rel_3 = a^2*b*d_1*d_2*d_3*t_0*x + a*b^2*d_1*d_2*d_3*t_0*y + a^2*d_1*d_2*d_3*t_0*x + a*b*d_1*d_2*d_3*t_0*x + a*b*d_0*d_2*d_3*t_1*x + a^2*d_0*d_1*d_3*t_2*x + a*b*d_1*d_2*d_3*t_0*y + b^2*d_1*d_2*d_3*t_0*y + b^2*d_0*d_2*d_3*t_1*y + a*b*d_0*d_1*d_3*t_2*y + a*b*d_1*d_2*d_3*t_0 + a*b*d_0*d_1*d_2*t_3 + a*d_1*d_2*d_3*t_0*x + a*d_0*d_2*d_3*t_1*x + a*d_0*d_1*d_3*t_2*x + b*d_1*d_2*d_3*t_0*y + b*d_0*d_2*d_3*t_1*y + b*d_0*d_1*d_3*t_2*y + a*d_1*d_2*d_3*t_0 + b*d_1*d_2*d_3*t_0 + b*d_0*d_2*d_3*t_1 + a*d_0*d_1*d_3*t_2 + a*d_0*d_1*d_2*t_3 + b*d_0*d_1*d_2*t_3 + d_1*d_2*d_3*t_0 + d_0*d_2*d_3*t_1 + d_0*d_1*d_3*t_2 + d_0*d_1*d_2*t_3;

i17 : Rel_4 = a^4*b^2*d_1*d_2*d_3*x^2 + 2*a^3*b^3*d_1*d_2*d_3*x*y + a^2*b^4*d_1*d_2*d_3*y^2 + 2*a^4*b*d_1*d_2*d_3*x^2 + 2*a^3*b^2*d_1*d_2*d_3*x^2 + 4*a^3*b^2*d_1*d_2*d_3*x*y + 4*a^2*b^3*d_1*d_2*d_3*x*y + 2*a^2*b^3*d_1*d_2*d_3*y^2 + 2*a*b^4*d_1*d_2*d_3*y^2 + 2*a^3*b^2*d_1*d_2*d_3*x + a^4*d_0*d_1*d_3*x^2 + a^2*b^2*d_0*d_2*d_3*x^2 + a^4*d_1*d_2*d_3*x^2 + 4*a^3*b*d_1*d_2*d_3*x^2 + a^2*b^2*d_1*d_2*d_3*x^2 + 2*a^2*b^3*d_1*d_2*d_3*y + 2*a^3*b*d_0*d_1*d_3*x*y + 2*a*b^3*d_0*d_2*d_3*x*y + 2*a^3*b*d_1*d_2*d_3*x*y + 8*a^2*b^2*d_1*d_2*d_3*x*y + 2*a*b^3*d_1*d_2*d_3*x*y + a^2*b^2*d_0*d_1*d_3*y^2 + b^4*d_0*d_2*d_3*y^2 + a^2*b^2*d_1*d_2*d_3*y^2 + 4*a*b^3*d_1*d_2*d_3*y^2 + b^4*d_1*d_2*d_3*y^2 + 4*a^3*b*d_1*d_2*d_3*x + 4*a^2*b^2*d_1*d_2*d_3*x + 2*a^3*d_0*d_1*d_3*x^2 + 2*a^2*b*d_0*d_2*d_3*x^2 + 2*a^3*d_1*d_2*d_3*x^2 + 2*a^2*b*d_1*d_2*d_3*x^2 + 4*a^2*b^2*d_1*d_2*d_3*y + 4*a*b^3*d_1*d_2*d_3*y + 4*a^2*b*d_0*d_1*d_3*x*y + 4*a*b^2*d_0*d_2*d_3*x*y + 4*a^2*b*d_1*d_2*d_3*x*y + 4*a*b^2*d_1*d_2*d_3*x*y + 2*a*b^2*d_0*d_1*d_3*y^2 + 2*b^3*d_0*d_2*d_3*y^2 + 2*a*b^2*d_1*d_2*d_3*y^2 + 2*b^3*d_1*d_2*d_3*y^2 + a^2*b^2*d_0*d_1*d_2 + a^2*b^2*d_1*d_2*d_3 + 2*a^3*d_0*d_1*d_3*x + 2*a*b^2*d_0*d_2*d_3*x + 2*a^3*d_1*d_2*d_3*x + 8*a^2*b*d_1*d_2*d_3*x + 2*a*b^2*d_1*d_2*d_3*x + a^2*d_0*d_1*d_3*x^2 + a^2*d_0*d_2*d_3*x^2 + a^2*d_1*d_2*d_3*x^2 + 2*a^2*b*d_0*d_1*d_3*y + 2*b^3*d_0*d_2*d_3*y + 2*a^2*b*d_1*d_2*d_3*y + 8*a*b^2*d_1*d_2*d_3*y + 2*b^3*d_1*d_2*d_3*y + 2*a*b*d_0*d_1*d_3*x*y + 2*a*b*d_0*d_2*d_3*x*y + 2*a*b*d_1*d_2*d_3*x*y + b^2*d_0*d_1*d_3*y^2 + b^2*d_0*d_2*d_3*y^2 + b^2*d_1*d_2*d_3*y^2 + 2*a^2*b*d_0*d_1*d_2 + 2*a*b^2*d_0*d_1*d_2 + 2*a^2*b*d_1*d_2*d_3 + 2*a*b^2*d_1*d_2*d_3 + 4*a^2*d_0*d_1*d_3*x + 4*a*b*d_0*d_2*d_3*x + 4*a^2*d_1*d_2*d_3*x + 4*a*b*d_1*d_2*d_3*x + 4*a*b*d_0*d_1*d_3*y + 4*b^2*d_0*d_2*d_3*y + 4*a*b*d_1*d_2*d_3*y + 4*b^2*d_1*d_2*d_3*y + a^2*d_0*d_1*d_2 + 4*a*b*d_0*d_1*d_2 + b^2*d_0*d_1*d_2 + a^2*d_0*d_1*d_3 + b^2*d_0*d_2*d_3 + a^2*d_1*d_2*d_3 + 4*a*b*d_1*d_2*d_3 + b^2*d_1*d_2*d_3 + 2*a*d_0*d_1*d_3*x + 2*a*d_0*d_2*d_3*x + 2*a*d_1*d_2*d_3*x + 2*b*d_0*d_1*d_3*y + 2*b*d_0*d_2*d_3*y + 2*b*d_1*d_2*d_3*y + 2*a*d_0*d_1*d_2 + 2*b*d_0*d_1*d_2 + 2*a*d_0*d_1*d_3 + 2*b*d_0*d_2*d_3 + 2*a*d_1*d_2*d_3 + 2*b*d_1*d_2*d_3 + d_0*d_1*d_2 + d_0*d_1*d_3 + d_0*d_2*d_3 + d_1*d_2*d_3;

i18 : Rels = {Rel_0, Rel_1, Rel_2, Rel_3, Rel_4};

i19 : -- This gives the following values for the spectra (T_k,D_k) of the associated vector field:
      T_0 = t_0;

i20 : T_1 = t_1*(a+1);

i21 : T_2 = t_2*(b+1);

i22 : D_0 = d_0;

i23 : D_1 = d_1*(a+1)^2;

i24 : D_2 = d_2*(b+1)^2;

i25 : Eq_0 = T_0 - (-c_0-c_5);

i26 : Eq_1 = T_1 - (c_0+c_4-c_5);

i27 : Eq_2 = T_2 - (-c_0+c_1+c_5);

i28 : Eq_3 = D_0 - (-c_2*c_3+c_0*c_5) ;

i29 : Eq_4 = D_1 - (-c_1*c_3+c_2*c_3+c_0*c_4-c_0*c_5) ;

i30 : Eq_5 = D_2 - (c_2*c_3-c_2*c_4-c_0*c_5+c_1*c_5) ;

i31 : Eqs = {Eq_0, Eq_1, Eq_2, Eq_3, Eq_4, Eq_5};

i32 : -- Some non-degeneracy assumptions: a+1,b+1 and x+y-1 are non-zero
      gc = {(a+1)*w_0-1, (b+1)*w_1-1, (x+y-1)*w_2-1};

i33 : -- Invariant functions p,q,r,s
      ------------------------------
      -- p: sum of tangential eigenvalues
      formula_p = p*(-c_3^2*c_2^2 - 3*a*c_0*b*c_5 + a*c_4*b*c_5 + b^3*c_3 - c_0^2*b^2 - c_0^2*c_5^2 - b^2*c_3*c_5 + 2*c_0^2*b*c_5 + a*c_0*b^2 + 2*a*c_0*c_5^2 - a*c_4*b^2 + c_0*c_4*b^2 - c_0*c_4*b*c_5 - c_1^2*c_3*c_5 + c_5*c_4*c_0*c_1 + 2*c_2*c_0*c_5*c_3 + c_2*c_4*c_1*c_3 - c_2*c_0*c_4^2 + c_1^2*c_3*b - 2*c_1*b^2*c_3 - 2*c_2*c_0*c_3*b - b*c_4*c_0*c_1 - c_2*c_4*c_3*b + 2*c_1*c_3*b*c_5 - c_1*c_5*c_0*a - c_1*c_5*c_4*a - c_2*c_3*c_1*a - 2*c_2*c_3*c_5*a + 2*c_2*c_0*c_4*a + c_1*c_4*b*a + 3*c_2*c_3*b*a + c_1*c_0*b*a + c_2*a^3 - c_5^2*a^2 - c_0*c_2*a^2 - 2*c_4*c_2*a^2 + b*c_5*a^2 + c_2*c_4^2*a + c_1*c_5*a^2 - c_1*b*a^2) - (-9*c_3^2*c_2^2 - a*c_0*b*c_5 + a*c_4*b*c_5 - c_0^2*b^2 - c_0^2*c_5^2 - c_4^2*b^2 + 3*b^2*c_3*c_5 + 2*c_0^2*b*c_5 - 4*c_5^2*c_3*b + 2*a*c_0*c_5^2 + 2*c_0*c_4*b^2 + c_4^2*b*c_5 - 3*c_0*c_4*b*c_5 - c_1^2*c_4*c_0 - c_5*c_4^2*c_1 - 5*c_1^2*c_3*c_5 + 3*c_5*c_4*c_0*c_1 - 4*c_2*c_0*c_1*c_3 + 10*c_2*c_0*c_5*c_3 + 7*c_2*c_4*c_1*c_3 - 4*c_2*c_4*c_5*c_3 + 4*c_1*c_5^2*c_3 + 4*c_2*c_0^2*c_4 - 5*c_2*c_0*c_4^2 + 2*c_1^2*c_3*b + c_4^2*c_1*b - 3*c_1*b^2*c_3 + c_1^3*c_3 + c_2*c_4^3 - 6*c_2*c_0*c_3*b - b*c_4*c_0*c_1 - 3*c_2*c_4*c_3*b + 2*c_1*c_3*b*c_5 - 3*c_1*c_5*c_0*a - c_1*c_5*c_4*a - 3*c_2*c_3*c_1*a - 6*c_2*c_3*c_5*a + 2*c_2*c_0*c_4*a - c_1*c_4*b*a + 9*c_2*c_3*b*a + c_1*c_0*b*a - c_5^2*a^2 + 3*c_0*c_2*a^2 - 3*c_4*c_2*a^2 + 2*c_2*c_4^2*a + 2*c_1*c_5*a^2 - a^2*c_1^2 - 4*a*c_2*c_0^2 + a*c_1^2*c_4 + a*c_1^2*c_0);

i34 : -- q: product of tangential eigenvalues
      formula_q = q*-(-a*b^2*c_0 + b^2*c_0^2 + a^2*b*c_1 - a*b*c_0*c_1 - a^3*c_2 + a^2*c_0*c_2 - b^3*c_3 + 2*b^2*c_1*c_3 - b*c_1^2*c_3 - 3*a*b*c_2*c_3 + 2*b*c_0*c_2*c_3 + a*c_1*c_2*c_3 + c_2^2*c_3^2 + a*b^2*c_4 - b^2*c_0*c_4 - a*b*c_1*c_4 + b*c_0*c_1*c_4 + 2*a^2*c_2*c_4 - 2*a*c_0*c_2*c_4 + b*c_2*c_3*c_4 - c_1*c_2*c_3*c_4 - a*c_2*c_4^2 + c_0*c_2*c_4^2 - a^2*b*c_5 + 3*a*b*c_0*c_5 - 2*b*c_0^2*c_5 - a^2*c_1*c_5 + a*c_0*c_1*c_5 + b^2*c_3*c_5 - 2*b*c_1*c_3*c_5 + c_1^2*c_3*c_5 + 2*a*c_2*c_3*c_5 - 2*c_0*c_2*c_3*c_5 - a*b*c_4*c_5 + b*c_0*c_4*c_5 + a*c_1*c_4*c_5 - c_0*c_1*c_4*c_5 + a^2*c_5^2 - 2*a*c_0*c_5^2 + c_0^2*c_5^2) - (c_0^2*c_1^2 - 4*c_0^3*c_2 + 4*c_1^3*c_3 - 18*c_0*c_1*c_2*c_3 - 27*c_2^2*c_3^2 - 2*c_0*c_1^2*c_4 + 12*c_0^2*c_2*c_4 + 18*c_1*c_2*c_3*c_4 + c_1^2*c_4^2 - 12*c_0*c_2*c_4^2 + 4*c_2*c_4^3 - 2*c_0^2*c_1*c_5 - 12*c_1^2*c_3*c_5 + 18*c_0*c_2*c_3*c_5 + 4*c_0*c_1*c_4*c_5 - 18*c_2*c_3*c_4*c_5 - 2*c_1*c_4^2*c_5 + c_0^2*c_5^2 + 12*c_1*c_3*c_5^2 - 2*c_0*c_4*c_5^2 + c_4^2*c_5^2 - 4*c_3*c_5^3);

i35 : -- r: sum of normal eigenvalues
      formula_r = r*-(-c_3^2*c_2^2 - 3*a*c_0*b*c_5 + a*c_4*b*c_5 + b^3*c_3 - c_0^2*b^2 - c_0^2*c_5^2 - b^2*c_3*c_5 + 2*c_0^2*b*c_5 + a*c_0*b^2 + 2*a*c_0*c_5^2 - a*c_4*b^2 + c_0*c_4*b^2 - c_0*c_4*b*c_5 - c_1^2*c_3*c_5 + c_5*c_4*c_0*c_1 + 2*c_2*c_0*c_5*c_3 + c_2*c_4*c_1*c_3 - c_2*c_0*c_4^2 + c_1^2*c_3*b - 2*c_1*b^2*c_3 - 2*c_2*c_0*c_3*b - b*c_4*c_0*c_1 - c_2*c_4*c_3*b + 2*c_1*c_3*b*c_5 - c_1*c_5*c_0*a - c_1*c_5*c_4*a - c_2*c_3*c_1*a - 2*c_2*c_3*c_5*a + 2*c_2*c_0*c_4*a + c_1*c_4*b*a + 3*c_2*c_3*b*a + c_1*c_0*b*a + c_2*a^3 - c_5^2*a^2 - c_0*c_2*a^2 - 2*c_4*c_2*a^2 + b*c_5*a^2 + c_2*c_4^2*a + c_1*c_5*a^2 - c_1*b*a^2) - (3*c_3^2*c_2^2 + 3*a*c_0*b*c_5 - a*c_4*b*c_5 + c_0^2*b^2 + 3*c_0^2*c_5^2 + b^2*c_3*c_5 - 4*c_0^2*b*c_5 - 4*a*c_0*c_5^2 - c_0*c_4*b^2 + 2*c_0*c_4*b*c_5 + 3*c_1^2*c_3*c_5 - 3*c_5*c_4*c_0*c_1 - 6*c_2*c_0*c_5*c_3 - 3*c_2*c_4*c_1*c_3 + 3*c_2*c_0*c_4^2 - 2*c_1^2*c_3*b + 2*c_1*b^2*c_3 + 4*c_2*c_0*c_3*b + 2*b*c_4*c_0*c_1 + 2*c_2*c_4*c_3*b - 4*c_1*c_3*b*c_5 + 2*c_1*c_5*c_0*a + 2*c_1*c_5*c_4*a + 2*c_2*c_3*c_1*a + 4*c_2*c_3*c_5*a - 4*c_2*c_0*c_4*a - c_1*c_4*b*a - 3*c_2*c_3*b*a - c_1*c_0*b*a + c_5^2*a^2 + c_0*c_2*a^2 + 2*c_4*c_2*a^2 - 2*c_2*c_4^2*a - c_1*c_5*a^2);

i36 : -- s: e_{1,1}
      formula_s = s*-(-c_3^2*c_2^2 - 3*a*c_0*b*c_5 + a*c_4*b*c_5 + b^3*c_3 - c_0^2*b^2 - c_0^2*c_5^2 - b^2*c_3*c_5 + 2*c_0^2*b*c_5 + a*c_0*b^2 + 2*a*c_0*c_5^2 - a*c_4*b^2 + c_0*c_4*b^2 - c_0*c_4*b*c_5 - c_1^2*c_3*c_5 + c_5*c_4*c_0*c_1 + 2*c_2*c_0*c_5*c_3 + c_2*c_4*c_1*c_3 - c_2*c_0*c_4^2 + c_1^2*c_3*b - 2*c_1*b^2*c_3 - 2*c_2*c_0*c_3*b - b*c_4*c_0*c_1 - c_2*c_4*c_3*b + 2*c_1*c_3*b*c_5 - c_1*c_5*c_0*a - c_1*c_5*c_4*a - c_2*c_3*c_1*a - 2*c_2*c_3*c_5*a + 2*c_2*c_0*c_4*a + c_1*c_4*b*a + 3*c_2*c_3*b*a + c_1*c_0*b*a + c_2*a^3 - c_5^2*a^2 - c_0*c_2*a^2 - 2*c_4*c_2*a^2 + b*c_5*a^2 + c_2*c_4^2*a + c_1*c_5*a^2 - c_1*b*a^2) - (18*c_3^2*c_2^2 + 2*c_0^2*c_5^2 - 2*c_0^2*b*c_5 + 4*c_5^2*c_3*b - 2*a*c_0*c_5^2 - c_4^2*b*c_5 + 3*c_0*c_4*b*c_5 + 2*c_1^2*c_4*c_0 + 2*c_5*c_4^2*c_1 + 10*c_1^2*c_3*c_5 - 6*c_5*c_4*c_0*c_1 + 8*c_2*c_0*c_1*c_3 - 20*c_2*c_0*c_5*c_3 - 14*c_2*c_4*c_1*c_3 + 8*c_2*c_4*c_5*c_3 - 8*c_1*c_5^2*c_3 - 8*c_2*c_0^2*c_4 + 10*c_2*c_0*c_4^2 - 2*c_1^2*c_3*b - c_4^2*c_1*b - 2*c_1^3*c_3 - 2*c_2*c_4^3 + 6*c_2*c_0*c_3*b + b*c_4*c_0*c_1 + 3*c_2*c_4*c_3*b - 2*c_1*c_3*b*c_5 + 3*c_1*c_5*c_0*a + c_1*c_5*c_4*a + 3*c_2*c_3*c_1*a + 6*c_2*c_3*c_5*a - 2*c_2*c_0*c_4*a - 2*c_2*c_4^2*a + 4*a*c_2*c_0^2 - a*c_1^2*c_4 - a*c_1^2*c_0);

i37 : -- The ideals of all relations:
      -------------------------------
      -- J is the ideal of relations coming from Jacobi:
      J = ideal(Rels) + ideal(gc);

o37 : Ideal of R

i38 : -- I is obtained from J by adding the formulas for the spectra of the vector field
      I = J + ideal(Eqs);

o38 : Ideal of R

i39 : -- Main computations
      --------------------
      -- We compute a GrÃ¶bner basis for I:
      gb(I)

   -- registering gb 0 at 0xb51f720

   -- [gb]{1}(3)mmm{2}(6)mmmmmm{3}(2)mm{4}(10)moommommm{5}(21)mmmmmmmmoomommmooooom
   -- {6}(60)mmmmmmmmmmomomoomooommommmmmomooommomoooomomooooooooooooo{7}(107)mmoommmmm
   -- mmmoomommomoomoommooommooooooomommoomoooooooooooooooomoooooooooooooo
   -- {8}(116)ooomoooooooommooooomoooooooomooooomoooooomoooooooooooooomooooooooooooooooo
   -- oooooo{9}(74)ooooooomomoooooooooooooooooooooooooooooooooooooooooooooooooooo
   -- oooooooo{10}(32)oooooooooooooooooooooooooooooooo{11}(13)ooooooooooooo
   -- {12}(2)oonumber of (nonminimal) gb elements = 164
   -- number of monomials                = 2638
   -- #reduction steps = 12211
   -- #spairs done = 1273
   -- ncalls = 4903
   -- nloop = 24911
   -- nsaved = 172
   -- 
o39 = GroebnerBasis[status: done; S-pairs encountered up to degree 11]

o39 : GroebnerBasis

i40 :       GBI = selectInSubring(1, gens gb(I));

              1       13
o40 : Matrix R  <--- R

i41 : -- Save the elements of GBI as a python list:
      gensI = new Array from flatten entries GBI;

i42 : 
      -- We now compute the polynomials h one by one:
      Ip = I + ideal(formula_p);

o42 : Ideal of R

i43 : GBIp = selectInSubring(2, gens gb(Ip));

   -- registering gb 1 at 0xb51f5f0

   -- [gb]{1}(3)mmm{2}(6)mmmmmm{3}(2)mm{4}(10)moommommm{5}(22)mmmmmmmmoomommmooooomm
   -- {6}(65)mmmmmmmmmmomomoomooommommmmmomooommomoooomomooooooooooooo{7}(106)mmoommmmm
   -- mmoomommmooomoommooommooooooomommoomooooooooooooooomoooooooooooo{8}(123)ooo
   -- oomooooooommoooomoooooooomooooomoooooomoooooooooooooomooooooooooooooooooooo
   -- oo{9}(81)ooooooomomooooooooooooooooooooooooooomooooooooooooooomoooooooooooo
   -- oooooo{10}(37)momooooooooooooooooooomoooooooooooooo{11}(21)mmoooooooooooooo
   -- ooooo{12}(10)mooooooooo{13}(7)moooooo{14}(2)oonumber of (nonminimal) gb elements = 193
   -- number of monomials                = 3660
   -- #reduction steps = 15526
   -- #spairs done = 1574
   -- ncalls = 5010
   -- nloop = 26798
   -- nsaved = 194
   -- 
              1       1
o43 : Matrix R  <--- R

i44 : hp = GBIp_(0,0);

i45 : Iq = I + ideal(formula_q);

o45 : Ideal of R

i46 : GBIq = selectInSubring(2, gens gb(Iq));

   -- registering gb 2 at 0xb51fab0

   -- [gb]{1}(3)mmm{2}(6)mmmmmm{3}(2)mm{4}(10)moommommm{5}(22)mmmmmmmmoomommmooooomm
   -- {6}(65)mmmmmmmmmmomomoomooommommmmmomooommomoooomomooooooooooooo{7}(106)mmoommmmm
   -- mmoomommmooomoommooommooooooomommoomooooooooooooooomoooooooooooo{8}(123)ooo
   -- oomooooooommoooomoooooooomooooomoooooomoooooooooooooomooooooooooooooooooooo
   -- oo{9}(81)ooooooomomooooooooooooooooooooooooooomooooooooooooooomoooooooooooo
   -- oooooo{10}(37)momooooooooooooooooooomoooooooooooooo{11}(21)mmoooooooooooooo
   -- ooooo{12}(10)mooooooooo{13}(7)moooooo{14}(2)oonumber of (nonminimal) gb elements = 193
   -- number of monomials                = 3660
   -- #reduction steps = 15507
   -- #spairs done = 1573
   -- ncalls = 5010
   -- nloop = 26816
   -- nsaved = 194
   -- 
              1       1
o46 : Matrix R  <--- R

i47 : hq = GBIq_(0,0);

i48 : Ir = I + ideal(formula_r);

o48 : Ideal of R

i49 : GBIr = selectInSubring(2, gens gb(Ir));

   -- registering gb 3 at 0xb51f980

   -- [gb]{1}(3)mmm{2}(6)mmmmmm{3}(2)mm{4}(10)moommommm{5}(22)mmmmmmmmoomommmooooomm
   -- {6}(65)mmmmmmmmmmomomoomooommommmmmomooommomoooomomooooooooooooo{7}(106)mmoommmmm
   -- mmoomommmooomoommooommooooooomommoomooooooooooooooomoooooooooooo{8}(123)ooo
   -- oomooooooommoooomoooooooomooooomoooooomoooooooooooooomooooooooooooooooooooo
   -- oo{9}(81)ooooooomomooooooooooooooooooooooooooomooooooooooooooomoooooooooooo
   -- oooooo{10}(37)momooooooooooooooooooomoooooooooooooo{11}(21)mmoooooooooooooo
   -- ooooo{12}(10)mooooooooo{13}(7)moooooo{14}(2)oonumber of (nonminimal) gb elements = 193
   -- number of monomials                = 3660
   -- #reduction steps = 15506
   -- #spairs done = 1573
   -- ncalls = 5010
   -- nloop = 26834
   -- nsaved = 194
   -- 
              1       1
o49 : Matrix R  <--- R

i50 : hr = GBIr_(0,0);

i51 : Is = I + ideal(formula_s);

o51 : Ideal of R

i52 : GBIs = selectInSubring(2, gens gb(Is));

   -- registering gb 4 at 0xb51f4c0

   -- [gb]{1}(3)mmm{2}(6)mmmmmm{3}(2)mm{4}(10)moommommm{5}(22)mmmmmmmmoomommmooooomm
   -- {6}(65)mmmmmmmmmmomomoomooommommmmmomooommomoooomomooooooooooooo{7}(106)mmoommmmm
   -- mmoomommmooomoommooommooooooomommoomooooooooooooooomoooooooooooo{8}(123)ooo
   -- oomooooooommoooomoooooooomooooomoooooomoooooooooooooomooooooooooooooooooooo
   -- oo{9}(81)ooooooomomooooooooooooooooooooooooooomooooooooooooooomoooooooooooo
   -- oooooo{10}(37)momooooooooooooooooooomoooooooooooooo{11}(21)mmoooooooooooooo
   -- ooooo{12}(10)mooooooooo{13}(7)moooooo{14}(2)oonumber of (nonminimal) gb elements = 193
   -- number of monomials                = 3660
   -- #reduction steps = 15516
   -- #spairs done = 1574
   -- ncalls = 5010
   -- nloop = 26852
   -- nsaved = 194
   -- 
              1       1
o52 : Matrix R  <--- R

i53 : hs = GBIs_(0,0);

i54 : -- Print all the relevant results:
      ----------------------------------
      print "OUTPUT:"

OUTPUT:

i55 : print toString gensI;
[79596*a-39905*b-238574, 26532*c_4-53064*c_5+7981*b+169762, 38223596345473217398442*c_2-182867265948239009340984*c_3+213345143606278844231148*c_5+5407470166298762216809*b-650850371151434057127062, 3*c_1+6*c_5-4*b-16, c_0+c_5-4, 62977005*y+4931564*b-60244732, 62977005*x-2476192*b+42738587, 347*b^2-4628*b+7868, 33811444235708*c_5*b+379557324161928*c_3-510439766660332*c_5-120014962774839*b+1568480560116426, 194878641128*c_3*b+342885251240*c_3-854749622412*c_5-124941796805*b+2814132460846, 227758858318743035015276*c_5^2+935416089015092731271016*c_3-2002354203792580326543956*c_5-74811527391998085751055*b+4106855941293049835996494, 26721695083852800486621889123104*c_3*c_5+24717126815727978762430705949544*c_3-60011958882844242457228027584756*c_5-6274582532276236815973062560155*b+192585041713085201003630207874578, 46955625384713496315491751447165602201953632*c_3^2+179926771712143141101615812008840061662846824*c_3-82090920116891369093046457293029265945780852*c_5-10529725943566552061050507317495620491207195*b+267332212237807211401240386514079038819756946]

i56 : print toString hp;
3304458636693875651644773*p^4-23379088345478790415995340*p^3+49551679403386908799808694*p^2-39615490609470050079352860*p+10138440914868056043894733

i57 : print toString hq;
802983448716611783349679839*q^4+6057061832873045850450465888*q^3+8220892437890168859863219744*q^2+1049813648791026016967518720*q-656868792374273004661408000

i58 : print toString hr;
3304458636693875651644773*r^4+236886089402261035384796*r^3-2361480475447712921087794*r^2-1054408391045835895722692*r-125455859602587870219083

i59 : print toString hs;
802983448716611783349679839*s^4-255708691033085259944247216*s^3-1889198858093497242051156664*s^2-605423311222765579888256320*s+85011752062106601163535600

i60 : exit

Process M2 finished
