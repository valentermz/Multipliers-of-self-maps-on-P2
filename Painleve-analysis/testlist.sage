# Apply the test in Test.sage to the list in 7th_2pos.out

# Requires the file Test.py which is generated when Test.sage is excecuted
# This can also be generated by typing 'sage --preparse Test.sage' at the command line
# Make sure the generated file is called Test.py and not Tesst.sage.py (rename manually if necessary)

import imp
import sys
import os

dir_path = os.path.dirname(os.path.realpath(__file__))

module_path = os.path.join(dir_path, '../Test/Test.sage.py')

try:
    Test = imp.load_source('Test', module_path)
except IOError:
    print('Warning: Please build Test.sage.py first.')
    print('Run: sage --preparse /path/to/Test/Test.sage')
    sys.exit()

# from Test import *

listin=open('7th_2pos.out','r')
r=listin.readlines()
l=[sage_eval(r[j].replace('[','').replace(']','').replace(';',',')) for j in range(132)]

for i in range(132):
    A=l[i]
    (t_0,t_1,t_2,t_3,d_0,d_1,d_2,d_3,u_4,u_5,u_6,v_4,v_5,v_6) = (A[0]+A[7],A[1]+A[8],A[2]+A[9],A[3]+A[10],A[0]*A[7],A[1]*A[8],A[2]*A[9],A[3]*A[10],A[4],A[5],A[6],A[11],A[12],A[13])
    S=[t_0,d_0,t_1,d_1,t_2,d_2,t_3,d_3,u_4,v_4,u_5,v_5,u_6,v_6]

    result = Test.Perform_Full_Test(S, True, verbose=False)
    if result is True:
        print 'Line {}: Test PASSED'.format(i+1)
        # Test.Perform_Full_Test(S, True, verbose=True)  # Uncomment to get more information each time the Test is passed
    
listin.close()
